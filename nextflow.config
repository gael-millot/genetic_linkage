/*
#########################################################################
##                                                                     ##
##     nextflow.config                                                 ##
##                                                                     ##
##     genetic_linkage                                                 ##
##     Gael A. Millot                                                  ##
##     Bioinformatics and Biostatistics Hub                            ##
##     Institut Pasteur Paris                                          ##
##                                                                     ##
#########################################################################
*/


/*
#########################################################################
##                                                                     ##
##     Parameters that must be set by the user                         ##
##                                                                     ##
#########################################################################
*/

/*
##########################
##                      ##
##     Files            ##
##                      ##
##########################
*/

env {
    RAW_GENOTYPE_FILE_NAME_CONF="https://zenodo.org/records/10689924/files/genotype.tsv" // absolute path of the raw genotype file name. Example: RAW_GENOTYPE_FILE_NAME_CONF="/mnt/c/Users/gmillot/Documents/Git_projects/genetic_linkage/dataset/genotype.tsv". Example: RAW_GENOTYPE_FILE_NAME_CONF="https://zenodo.org/record/8403784/files/freq_NFE_hg19.txt"
    RAW_FREQ_FILE_NAME_CONF="https://zenodo.org/records/10689924/files/freq_NFE_hg19.txt" // absolute path of the raw allelic frequency file name. Example RAW_FREQ_FILE_NAME_CONF="https://zenodo.org/record/8403784/files/freq_NFE_hg19.txt"
    RAW_MAP_FILE_NAME_CONF="https://zenodo.org/records/10689924/files/map_hg19.txt" // absolute path of the raw map file name. BEWARE: replace the spaces in the Header. Example:  RAW_MAP_FILE_NAME_CONF="https://zenodo.org/record/8403784/files/map_hg19.txt"
    RAW_PEDIGREE_FILE_NAME_CONF="https://zenodo.org/records/10689924/files/pedigree.txt" // absolute path of the raw pedigree file name. Example: RAW_PEDIGREE_FILE_NAME_CONF="https://zenodo.org/record/8403784/files/full_pedfile_gm_modified.pro"
    human_chr_info="https://zenodo.org/records/10689924/files/hg19_grch37p5_chr_size_cumul.txt" // absolute path of the chr info file name. Example human_chr_info="https://zenodo.org/record/8403784/files/hg19_grch37p5_chr_size_cumul.txt"
}

/*
#########################################
##                                     ##
##     Individual filtering            ##
##                                     ##
#########################################
*/

env {
    IID_IN_GROUP_CONF="7,8,34,36" // single string of names separated by single space. Merlin cannot work on big pedigree. Thus, genotype IID of the pedigree file must be split according to the number of GROUP_CONF elements. Order will be respected. Each element must have the 2 common IID of the pedigree (for instance : 1 and 2). Each group cannot be over 17. Each group should have both affected and unaffected indiv. Example: IID_IN_GROUP_CONF="1,2,3,4,5,7,8,25,26,27,34,36,38,39 1,2,5,9,10,11,15,16,21,22,40,42,43,44,55 1,2,5,13,14,17,18,19,20,50,51,52,56,57,58,59"
}

/*
#########################################
##                                     ##
##     Linkage (Merlin) parameters     ##
##                                     ##
#########################################
*/

env {
    MERLIN_ANALYSE_OPTION_CONF="--model" // kind of analysis. Either "--model" (parametric using $MERLIN_PARAM_CONF), "--npl" (non parametric). Write MERLIN_ANALYSE_OPTION_CONF="NULL" to do not perform Linkage analysis. Warning: the "--best" (haplotyping) option is not used since Merlin as difficulties with large pedigrees (see below for haplotyping).
    MERLIN_PARAM_CONF="TRAIT\t0.05\t0.05,0.90,0.90\tPARAM_MODEL" // See http://csg.sph.umich.edu/abecasis/MERLIN/reference/parametric.html. Not used if MERLIN_ANALYSE_OPTION_CONF != "--model" BUT WRITE IT CORRECTLY ANYWAY
    MERLIN_DISPLAY_CHROMO_CONF='echo ""07' // single string between single quotes. 2 digits chromo number that need to be studied: Example: MERLIN_CHROMO_CONF='echo ""07'. Either {01..23} or a single number like 07. 23=X, 24=Y, 25=PseudoXY
    MERLIN_LOD_CUTOFF_CONF='echo ""{2..3}' // single string between single quotes. Vector of lodscore cut-off. Example: MERLIN_LOD_CUTOFF_CONF='echo ""{2..3}'
    bit_nb="55" // single string between quotes. 2 digits such as bit increase is adapted to large pedigrees but slower the computation: Example: bit_nb="55". With 3 groups, bit_nb="31" should work
}

/*
#############################################
##                                         ##
##     Haplotyping (Allegro) parameters    ##
##                                         ##
#############################################
*/

env {
    CHR="19" // single charater string indicating which chromo should be analyzed for haplotyping.  Write CHR="NULL" to do not perform haplotyping analysis.
    BEGIN="50000000" // single charater string indicating the starting position of the CHR region to analysis. If BEGIN="NULL", then position 0 is used.
    END="60000000" // single charater string indicating the ending position of the CHR region to analysis. If END="NULL", then end position of CHR is used.
}

/*
############################
##                        ##
##     Local / Cluster    ##
##                        ##
############################
*/

// see https://confluence.pasteur.fr/pages/viewpage.action?pageId=69304504
system_exec = 'local' // single character string of the system that runs the workflow. Either 'local' to run on our own computer or 'slurm' to run on the pasteur cluster. Example: system_exec = 'local'
queue = 'common,dedicated' // single character string of the -p option of slurm. Example: queue = 'common,dedicated'. Example: queue = 'hubbioit'
qos = '--qos=ultrafast' // single character string of the --qos option of slurm. Example: qos= '--qos=fast'. Example: qos = '--qos=ultrafast'. Example: qos = '--qos=normal' (only for common). Example: qos = '--qos=hubbioit'
add_options = ' ' // single character string of the additional option of slurm. Example: add_options = '--exclude=maestro-1101,maestro-1034' or add_options = ' ', add_options = '--time=70:00:00' (acceptable time formats include "minutes", "minutes:seconds", "hours:minutes:seconds", "days-hours", "days-hours:minutes" and "days-hours:minutes:seconds"). See https://slurm.schedmd.com/sbatch.html#OPT_time for other options
apptainer_path = "NULL" // single character string of the path of the apptainer folder (where all the apptainer images are are pulled and stored for proper nextflow execution). Write "NULL" for default path (but will not work in most cases). Example: apptainer_path='/pasteur/zeus/projets/p01/BioIT/gmillot/apptainer'. Example: apptainer_path='/mnt/c/Users/gmillot/apptainer'. Example: apptainer_path="$projectDir/apptainer" # do not forget double quotes

/*
#############################
##                         ##
##     Other (optional)    ##
##                         ##
#############################
*/

out_path_ini = "$projectDir/results" // single character string of where the output files will be saved. Example out_path_ini = '.' for where the main.nf run is executed or out_path_ini = "$projectDir/results" to put the results in a result folder (created if required), $projectDir indicating where the main.nf run is executed. Example: out_path_ini = '/mnt/c/Users/Gael/Desktop'. Example : out_path_ini="/pasteur/zeus/projets/p01/BioIT/gmillot/08002_bourgeron/results". Warning: this does not work: out_path_ini = "/mnt/share/Users/gael/Desktop"
result_folder_name="pedigree_analysis" // single character string.of the name of the folder where the results files are dorpped


/*
#########################################################################
##                                                                     ##
##     End Parameters that must be set by the user                     ##
##                                                                     ##
#########################################################################
*/



//////// Pre processing

int secs = (new Date().getTime())/1000
out_path="${out_path_ini}/${result_folder_name}_${secs}"


//////// end Pre processing



//////// variables used here and also in the main.nf file

env {
    system_exec = "${system_exec}"
    out_path_ini = "${out_path_ini}"
    out_path = "${out_path}"
    queue = "${queue}"
    qos = "${qos}"
    add_options = "${add_options}"
    // OTHER PARAMETERS
    BASH_FUNCTIONS_CONF="$projectDir/bin/little_bash_functions_v2.0.sh"
    r_main_functions_conf="$projectDir/bin/R_main_functions_gael_20180123.R"
    r_check_lod_gael_conf="$projectDir/bin/check_lod_gael.R"
    r_clean_lod_gael_conf="$projectDir/bin/clean_lod_gael.R"
    r_lod_files_assembly_conf="$projectDir/bin/lod_files_assembly.R"
    r_custom_lod_graph_gael_conf="$projectDir/bin/custom_lod_graph_gael.R"
    r_info_files_assembly_conf="$projectDir/bin/info_files_assembly.R"
    r_custom_info_graph_gael_conf="$projectDir/bin/custom_info_graph_gael.R"
    alohomora_bch_linkage="$projectDir/bin/alohomora_bch_linkage_20180221"
    alohomora_bch_haplo="$projectDir/bin/alohomora_bch_haplo_20231213"
    allegro_script="$projectDir/bin/allegro_20231213.pl"
}

//////// variables used here and also in the main.nf file





//////// Scopes

// kind of execution. Either 'local' or 'slurm'
// those are closures. See https://www.nextflow.io/docs/latest/script.html#closures
executor {
    name = "${system_exec}"
    queueSize = 2000
}

// create a report folder and print a html report file . If no absolute path, will be where the run is executed
// see https://www.nextflow.io/docs/latest/config.html#config-report
report {
       enabled = true
       file = "${out_path}/reports/report.html" // warning: here double quotes to get the nextflow variable interpretation
}

// txt file with all the processes and info
trace {
    enabled = true
    file = "${out_path}/reports/trace.txt"
}

// html file with all the processes
timeline {
    enabled = true
    file = "${out_path}/reports/timeline.html"
}

// .dot picture of the workflow
dag {
    enabled = true
    file = "${out_path}/reports/nf_dag.png"
}



// define apptainer parameters
apptainer {
    enabled = true
    autoMounts = true // automatically mounts host paths in the executed container
    if(system_exec == 'slurm' || system_exec == 'slurm_local'){
        runOptions = '--no-home --bind /pasteur' //-B /run/shm:/run/shm has been removed because block the pipeline. Warning: clone_assignment process use python. Thus, -B /run/shm:/run/shm should be required normally
    }else{
        runOptions = '--no-home -B /run/shm:/run/shm' // --no-home prevent apptainer to mount the $HOME path and thus forces apptainer to work with only what is inside the container
    }
    //runOptions = '--home $HOME:/home/$USER --bind /pasteur' // provide any extra command line options supported by the apptainer exec. Here, fait un bind de tout /pasteur dans /pasteur du container. Sinon pas d accès
    if(apptainer_path == "NULL"){
        if(system_exec == 'slurm'){
            cacheDir = '/pasteur/zeus/projets/p01/BioIT/gmillot/apptainer' // name of the directory where remote apptainer images are stored. When rerun, the exec directly uses these without redownloading them. When using a computing cluster it must be a shared folder accessible to all computing nodes
        }else if(system_exec == 'slurm_local'){
            cacheDir = 'apptainer' // "$projectDir/apptainer" can be used but do not forget double quotes.
        }else{
            cacheDir = '/mnt/c/Users/gmillot/apptainer' // "$projectDir/apptainer" can be used but do not forget double quotes.
        }
    }else{
        cacheDir = "${apptainer_path}"
    }
}

//////// end Scopes



//////// directives

// provide the default directives for all the processes in the main.nf pipeline calling this config file
process {
// directives for all the processes
    // executor='local' // no need because already defined above in the executor scope
    if(system_exec == 'slurm'){
        queue = "$queue"
        clusterOptions = "$qos $add_options"
        scratch=false
        maxRetries=3
        errorStrategy = {task.exitStatus in 137..143 ? 'retry' : 'terminate' }
    }else{
        maxRetries=0
        errorStrategy='terminate'
    }

    withLabel: bash {
        container='gmillot/alohomora_merlin_allegro_v1.0:gitlab_v10.8'
        cpus=1
        memory='30G'
    }

    withLabel: r_ext {
        container='gmillot/r_v4.1.2_extended_v2.1:gitlab_v8.8'
        cpus=1
        memory='6G'
    }
}

//////// end directives