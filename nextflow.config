/*
#########################################################################
##                                                                     ##
##     nextflow.config                                                 ##
##                                                                     ##
##     genetic_linkage                                                 ##
##     Gael A. Millot                                                  ##
##     Bioinformatics and Biostatistics Hub                            ##
##     Computational Biology Department                                ##
##     Institut Pasteur Paris                                          ##
##                                                                     ##
#########################################################################
*/


//////// variables that will be used only in the main.nf

// variables exported to the main.nf environment. See https://www.nextflow.io/docs/latest/config.html#scope-env
env {
    //_______________________________________________________________________________________________
    // INPUT FILES 
    bin_dir="/mnt/c/Users/gmillot/Documents/Git_projects/genetic_linkage/bin" // bin directory (where script files used by nextflow are)
    RAW_GENOTYPE_FILE_NAME_CONF="/mnt/c/Users/gmillot/Documents/Git_projects/genetic_linkage/dataset/genotype.tsv" // absolute path of the raw genotype file name. Example: RAW_GENOTYPE_FILE_NAME_CONF="/mnt/c/Users/gmillot/Documents/Git_projects/genetic_linkage/dataset/Nantes2011_Geno_w43_w1_wo63_wo64.txt". Example: RAW_FREQ_FILE_NAME_CONF="https://zenodo.org/record/8403784/files/freq_NFE_hg19.txt"
    RAW_FREQ_FILE_NAME_CONF="/mnt/c/Users/gmillot/Documents/Git_projects/genetic_linkage/dataset/freq_NFE_hg19.txt" // absolute path of the raw allelic frequency file name. Example RAW_FREQ_FILE_NAME_CONF="https://zenodo.org/record/8403784/files/freq_NFE_hg19.txt"
    RAW_MAP_FILE_NAME_CONF="/mnt/c/Users/gmillot/Documents/Git_projects/genetic_linkage/dataset/map_hg19.txt" // absolute path of the raw map file name. BEWARE: replace the spaces in the Header. Example:  RAW_MAP_FILE_NAME_CONF="https://zenodo.org/record/8403784/files/map_hg19.txt"
    RAW_PEDIGREE_FILE_NAME_CONF="/mnt/c/Users/gmillot/Documents/Git_projects/genetic_linkage/dataset/pedigree.txt" // absolute path of the raw pedigree file name. Example: RAW_PEDIGREE_FILE_NAME_CONF="https://zenodo.org/record/8403784/files/full_pedfile_gm_modified.pro"
    human_chr_info="/mnt/c/Users/gmillot/Documents/Git_projects/genetic_linkage/dataset/hg19_grch37p5_chr_size_cumul.txt" // absolute path of the chr info file name. Example human_chr_info="https://zenodo.org/record/8403784/files/hg19_grch37p5_chr_size_cumul.txt"
    //_______________________________________________________________________________________________
    // PARAMETERS FOR splitting the data because alohomora does not deal with big files
    IID_IN_GROUP_CONF="1,2,3,4,5,7,8,25,26,27,34,36,38,39" // single string of names separated by single space. Merlin cannot work on big pedigree. Thus, genotype IID of the pedigree file must be split according to the number of GROUP_CONF elements. Order will be respected. Each element must have the 2 common IID of the pedigree (for instance : 1 and 2). Each group cannot be over 17. Each group should have both affected and unaffected indiv. Example: IID_IN_GROUP_CONF="1,2,3,4,5,7,8,25,26,27,34,36,38,39 1,2,5,9,10,11,15,16,21,22,40,42,43,44,55 1,2,5,13,14,17,18,19,20,50,51,52,56,57,58,59"
    //_______________________________________________________________________________________________
    // MERLIN PARAMETERS
    MERLIN_ANALYSE_OPTION_CONF="--npl --exp" // kind of analysis. Either "--model" (parametric using $MERLIN_PARAM_CONF), "--npl" (non parametric), "--best" (haplotyping)
    MERLIN_PARAM_CONF="TRAIT\t0.05\t0.05,0.90,0.90\tPARAM_MODEL" // See http://csg.sph.umich.edu/abecasis/MERLIN/reference/parametric.html. Not used if MERLIN_ANALYSE_OPTION_CONF != "--model" BUT WRITE IT CORRECTLY ANYWAY
    MERLIN_DISPLAY_CHROMO_CONF='echo ""07' // single string between single quotes. 2 digits chromo number that need to be studied: Example: MERLIN_CHROMO_CONF='$(echo ""07)'. Either {01..23} or a single number like 07. 23=X, 24=Y, 25=PseudoXY
    MERLIN_LOD_CUTOFF_CONF='echo ""{2..3}' // single string between single quotes. Vector of lodscore cut-off. Example: MERLIN_LOD_CUTOFF_CONF='echo ""{2..3}'
    bit_nb="55" // single string between quotes. 2 digits such as bit increase is adapted to large pedigrees but slower the computation: Example: bit_nb="55". With 3 groups, bit_nb="31" should work
    //_______________________________________________________________________________________________
}

//////// end variables that will be used only in the main.nf




//////// variables that will be used below (and potentially in the main.nf file)

//// must be also exported
system_exec = 'local' // the system that runs the workflow. Either 'local' or 'slurm'
out_path_ini = "$baseDir/results" // where the report file will be saved. Example report_path = '.' for where the main.nf run is executed or report_path = '/mnt/c/Users/gmillot/Desktop'. Another example : out_path="/pasteur/zeus/projets/p01/BioIT/gmillot/08002_bourgeron/results". Warning: this does not work: out_path="/mnt/share/Users/gael/Desktop"
//// end must be also exported

//// General variable
result_folder_name="linkage"
//// end General variable

//// slurm variables
// see https://confluence.pasteur.fr/pages/viewpage.action?pageId=69304504
queue = 'common,dedicated' // -p option of slurm. Example: queue = 'common,dedicated'. Example: queue = 'hubbioit'
qos = '--qos=ultrafast' // --qos option of slurm. Example: qos= '--qos=fast'. Example: qos = '--qos=ultrafast'. Example: qos = '--qos=hubbioit'
add_options = ' ' // additional option of slurm. Example: addoptions = '--exclude=maestro-1101,maestro-1034' or add_options = ' ', add_options = '--time=70:00:00' (acceptable time formats include "minutes", "minutes:seconds", "hours:minutes:seconds", "days-hours", "days-hours:minutes" and "days-hours:minutes:seconds"). See https://slurm.schedmd.com/sbatch.html#OPT_time for other options
//// end slurm variables

//////// end variables that will be used below



//////// Pre processing

int secs = (new Date().getTime())/1000
out_path="${out_path_ini}/${result_folder_name}_${secs}"


//////// end Pre processing



//////// variables used here and also in the main.nf file

env {
    system_exec = "${system_exec}"
    out_path_ini = "${out_path_ini}"
    out_path = "${out_path}"
    queue = "${queue}"
    qos = "${qos}"
    add_options = "${add_options}"
    // OTHER PARAMETERS
    BASH_FUNCTIONS_CONF="${bin_dir}/little_bash_functions_v2.0.sh"
    r_main_functions_conf="${bin_dir}/R_main_functions_gael_20180123.R"
    r_check_lod_gael_conf="${bin_dir}/check_lod_gael.R"
    r_clean_lod_gael_conf="${bin_dir}/clean_lod_gael.R"
    r_lod_files_assembly_conf="${bin_dir}/lod_files_assembly.R"
    r_custom_lod_graph_gael_conf="${bin_dir}/custom_lod_graph_gael.R"
    r_info_files_assembly_conf="${bin_dir}/info_files_assembly.R"
    r_custom_info_graph_gael_conf="${bin_dir}/custom_info_graph_gael.R"
    alohomora_bch_conf="${bin_dir}/alohomora_bch_gael_20180221"
}

//////// variables used here and also in the main.nf file





//////// Scopes

// kind of execution. Either 'local' or 'slurm'
// those are closures. See https://www.nextflow.io/docs/latest/script.html#closures
executor {
    name = "${system_exec}"
    queueSize = 2000
}

// create a report folder and print a html report file . If no absolute path, will be where the run is executed
// see https://www.nextflow.io/docs/latest/config.html#config-report
report {
       enabled = true
       file = "${out_path}/reports/report.html" // warning: here double quotes to get the nextflow variable interpretation
}

// txt file with all the processes and info
trace {
    enabled = true
    file = "${out_path}/reports/trace.txt"
}

// html file with all the processes
timeline {
    enabled = true
    file = "${out_path}/reports/timeline.html"
}

// .dot picture of the workflow
dag {
    enabled = true
    file = "${out_path}/reports/nf_dag.png"
}


// define singularity parameters
singularity {
    enabled = true
    autoMounts = true // automatically mounts host paths in the executed container
    if(system_exec == 'slurm' || system_exec == 'slurm_local'){
        runOptions = '--no-home --bind /pasteur -B /run/shm:/run/shm'
    }else{
        runOptions = '--no-home -B /run/shm:/run/shm' // --no-home prevent singularity to mount the $HOME path and thus forces singularity to work with only what is inside the container
    }
    //runOptions = '--home $HOME:/home/$USER --bind /pasteur' // provide any extra command line options supported by the singularity exec. Here, fait un bind de tout /pasteur dans /pasteur du container. Sinon pas d acc√®s
    if(system_exec == 'slurm'){
        cacheDir = '/pasteur/zeus/projets/p01/BioIT/gmillot/singularity' // name of the directory where remote Singularity images are stored. When rerun, the exec directly uses these without redownloading them. When using a computing cluster it must be a shared folder accessible to all computing nodes
    }else if(system_exec == 'slurm_local'){
        cacheDir = 'singularity' // "$baseDir/singularity" can be used but do not forget double quotes.
    }else{
        cacheDir = '/mnt/c/Users/gmillot/singularity' // "$baseDir/singularity" can be used but do not forget double quotes.
    }
}

//////// end Scopes



//////// directives

// provide the default directives for all the processes in the main.nf pipeline calling this config file
process {
// directives for all the processes
    // executor='local' // no need because already defined above in the executor scope
    if(system_exec == 'slurm'){
        queue = "$queue"
        clusterOptions = "$qos $add_options"
        scratch=false
        maxRetries=30
        errorStrategy='retry'
    }else{
        maxRetries=0
        errorStrategy='terminate'
    }

    withLabel: bash {
        container='gmillot/alohomora_merlin_v2.1:gitlab_v9.5'
        cpus=1
        memory='6G'
    }

    withLabel: r_ext {
        container='gmillot/r_v4.1.2_extended_v2.1:gitlab_v8.8'
        cpus=1
        memory='6G'
    }
}

//////// end directives